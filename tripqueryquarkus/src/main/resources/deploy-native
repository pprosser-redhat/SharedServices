mvn clean package -Dnative -Dnative-image.docker-build=true -Dnative-image.xmx=5g -DskipTests

oc new-build --binary --name=tripqueryquarknative -l app=tripqueryquarknative
oc patch bc/tripqueryquarknative -p "{\"spec\":{\"strategy\":{\"dockerStrategy\":{\"dockerfilePath\":\"src/main/docker/Dockerfile.native\"}}}}"
oc start-build tripqueryquarknative --from-dir=. --follow

oc new-app --image-stream=tripqueryquarknative:latest

oc expose service tripqueryquarknative --port=8080

Upload application.yml as config map

oc create configmap tripqueryquarkus --from-file src/main/resources/application.yml

Same level as containers :-

volumes:
  - name: myconfig
    projected:
      sources:
        - configMap:
            name: tripqueryquarkus
      defaultMode: 420

Underneath containers 

    volumeMounts:
      - name: myconfig
      mountPath: /work/config


resources:
  limits:
    memory: 150Mi
  requests:
    memory: 30Mi


Modified Dockerfile.native to add memory limits for the running application

CMD ["./application", "-Xmn10m", "-Xmx30m", "-Dquarkus.http.host=0.0.0.0"]

Deploy as Knative service....

The option below will not mount the configmap for externalisation of the configuration.

~/knativecli/kn service create tripqueryquarknative --image image-registry.openshift-image-registry.svc:5000/trips/tripqueryquarknative

To ensure the configmap gets bound into the deployment, create the Knative service using the Openshift command below:-

 oc apply -f src/main/resources/tripqueryquarknative.yaml

 or using the knative cli as below

~/knativecli/kn service create tripqueryquarknative --image image-registry.openshift-image-registry.svc:5000/trips/tripqueryquarknative --mount /work/config=myconfig --volume myconfig=cm:tripqueryquarkus
